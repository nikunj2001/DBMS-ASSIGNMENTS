create table College(cName varchar2(10) primary key, state varchar2(10), enrollment int);
create table Student(sID int primary key, sName varchar2(10), GPA real, sizeHS int);
create table Apply(sID int, cName varchar2(10), major varchar2(20), decision char(1), primary key(sID, major, cName), constraint sID_fk Foreign key(sID) references Student, constraint cName_fk Foreign key(cName) references College);
delete from Student;
delete from College;
delete from Apply;
insert into Student values (123, 'Amy', 3.9, 1000);
insert into Student values (234, 'Bob', 3.6, 1500);
insert into Student values (345, 'Craig', 3.5, 500);
insert into Student values (456, 'Doris', 3.9, 1000);
insert into Student values (567, 'Edward', 2.9, 2000);
insert into Student values (678, 'Fay', 3.8, 200);
insert into Student values (789, 'Gary', 3.4, 800);
insert into Student values (987, 'Helen', 3.7, 800);
insert into Student values (876, 'Irene', 3.9, 400);
insert into Student values (765, 'Jay', 2.9, 1500);
insert into Student values (654, 'Amy', 3.9, 1000);
insert into Student values (543, 'Craig', 3.4, 2000);
insert into College values ('Stanford', 'CA', 15000);
insert into College values ('Berkeley', 'CA', 36000);
insert into College values ('MIT', 'MA', 10000);
insert into College values ('Cornell', 'NY', 21000);
insert into College values ('Harvard', 'MA', 50040);
insert into Apply values (123, 'Stanford', 'CS', 'Y');
insert into Apply values (123, 'Stanford', 'EE', 'N');
insert into Apply values (123, 'Berkeley', 'CS', 'Y');
insert into Apply values (123, 'Cornell', 'EE', 'Y');
insert into Apply values (234, 'Berkeley', 'biology', 'N');
insert into Apply values (345, 'MIT', 'bioengineering', 'Y');
insert into Apply values (345, 'Cornell', 'bioengineering', 'N');
insert into Apply values (345, 'Cornell', 'CS', 'Y');
insert into Apply values (345, 'Cornell', 'EE', 'N');
insert into Apply values (678, 'Stanford', 'history', 'Y');
insert into Apply values (987, 'Stanford', 'CS', 'Y');
insert into Apply values (987, 'Berkeley', 'CS', 'Y');
insert into Apply values (876, 'Stanford', 'CS', 'N');
insert into Apply values (876, 'MIT', 'biology', 'Y');
insert into Apply values (876, 'MIT', 'marine biology', 'N');
insert into Apply values (765, 'Stanford', 'history', 'Y');
insert into Apply values (765, 'Cornell', 'history', 'N');
insert into Apply values (765, 'Cornell', 'psychology', 'Y');
insert into Apply values (543, 'MIT', 'CS', 'N');
commit;

-- Query 1 IDs and names of students who have applied to major in CS at some college.

SELECT SID,SNAME FROM STUDENT WHERE SID IN( SELECT SID FROM APPLY WHERE major='CS') 

-- qUERY 2 Find ID and name of student having same high school size as Jay.

SELECT SID,sNAME FROM STUDENT WHERE sizeHS =(SELECT sizeHS FROM STUDENT WHERE sName='Jay')

-- QUERY 3 Find ID and name of student having same high school size as Jay but result should not include Jay.

SELECT sID,SNAME FROM STUDENT WHERE sizeHS IN(SELECT sizeHS FROM STUDENT WHERE sName='Jay') AND sNAME NOT IN ('Jay')

-- qUERY  4. Find the name of student with their GPA and Sid whose GPA not equal to GPA of Irene?

SELECT sName,GPA,sID FROM STUDENT WHERE GPA NOT IN(SELECT GPA FROM STUDENT WHERE sName='Irene')

-- QUERY 5 Find college where any student having their name started from J have applied?

SELECT DISTINCT cName FROM APPLY WHERE sID IN(SELECT sID FROM STUDENT WHERE sNAME LIKE 'J%')


-- QUERY 6 Find all different major where Irene has applied?

SELECT major FROM APPLY WHERE sID=(SELECT sID FROM STUDENT WHERE sName ='Irene' ) 

-- QUERY 7 Find IDs of student and major who applied in any of major Irene had applied to?

SELECT sID,major FROM APPLY WHERE major IN (
SELECT major FROM APPLY WHERE sID=(
SELECT sID FROM STUDENT WHERE sName ='Irene' ) )

-- QUERY 8 Find IDs of student and major who applied in any of major Irene had applied to? But this time exclude Irene sID from the list.
SELECT sID,major FROM APPLY WHERE major IN (
SELECT major FROM APPLY WHERE sID=(
SELECT sID FROM STUDENT WHERE sName ='Irene' ) )
AND sID NOT IN(SELECT sID FROM STUDENT WHERE sName ='Irene' )

-- QUERY 9 Give the number of colleges Jay applied to? (Remember count each college once no matter if he applied to same college twice with different major)

SELECT COUNT(DISTINCT cName) FROM APPLY WHERE sID IN(SELECT sID FROM STUDENT WHERE sName='Jay') 


-- QUERY 10 Find sID of student who applied to more or same number of college where Jay has applied?

SELECT sID FROM APPLY GROUP BY sID  HAVING count(DISTINCT cName)>=(SELECT COUNT(DISTINCT cName) FROM APPLY WHERE sID IN(SELECT sID FROM STUDENT WHERE sName='Jay'))


-- QUERY 11 Find details of Students who applied to major CS but not applied to major EE? (sID 987, 876, 543 should only be include in result)

SELECT * FROM STUDENT WHERE sID IN (SELECT DISTINCT(sID) FROM APPLY WHERE major='CS' AND sID NOT IN( SELECT sID FROM APPLY WHERE major='EE') )

-- QUERY 12 All colleges such that some other college is in same state. (Cornell should not be part of result as no other college in New York Hint: use exists)

SELECT cName FROM COLLEGE OUTER_TABLE WHERE EXISTS(SELECT cName FROM COLLEGE WHERE state = OUTER_TABLE.state AND cName != OUTER_TABLE.cName);

-- QUERY 13 Find the college with highest enrollment.

SELECT cName FROM College WHERE enrollment=(SELECT MAX(enrollment) FROM College) 

-- QUERY 14 Find name of student having lowest GPA.

SELECT sName FROM STUDENT WHERE GPA=(SELECT MIN(GPA) FROM STUDENT)

-- QUERY 15 Find the most popular major.

SELECT major FROM APPLY GROUP BY major HAVING COUNT(*) = (SELECT MAX(APPLICATION_COUNT) FROM ( SELECT COUNT(*) AS APPLICATION_COUNT FROM APPLY GROUP BY major) COUNT_TABLE);


-- QUERY 16 Find sID, sName, sizeHS of all students NOT from smallest HS

SELECT sID ,sName ,sizeHS FROM STUDENT WHERE sizeHS NOT IN (SELECT MIN(sizeHS) FROM STUDENT)

-- QUERY 17 Find the name of student who applies to all the colleges where sID 987 has applied?

SELECT sNAME FROM STUDENT WHERE sID IN(SELECT sID FROM APPLY WHERE cName IN(SELECT cName FROM APPLY WHERE sID='987'))


-- 19 Find sid of student who have not applied to Stanford.

SELECT sID FROM APPLY WHERE cName  !='Stanford'

